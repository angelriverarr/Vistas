// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiendaOnline.Data;

#nullable disable

namespace TiendaOnline.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220523224205_Migracion")]
    partial class Migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TiendaOnline.Models.Articulos", b =>
                {
                    b.Property<int>("ArticuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ArticuloId");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("TiendaOnline.Models.Carritos", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CarritoId");

                    b.HasIndex("ArticuloID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("TiendaOnline.Models.Categorias", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("TiendaOnline.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MunicipioID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.HasIndex("DepartamentoID");

                    b.HasIndex("MunicipioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TiendaOnline.Models.Compras", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProveedorID")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("CompraId");

                    b.HasIndex("ArticuloID");

                    b.HasIndex("EmpleadoID");

                    b.HasIndex("ProveedorID");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("TiendaOnline.Models.Departamentos", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("TiendaOnline.Models.Empleados", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MunicipioID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("DepartamentoID");

                    b.HasIndex("MunicipioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("TiendaOnline.Models.Municipios", b =>
                {
                    b.Property<int>("MunicipioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MunicipioId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("TiendaOnline.Models.Pagos", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codtransaccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PagoId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("TiendaOnline.Models.Proveedores", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MunicipioID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProveedorId");

                    b.HasIndex("DepartamentoID");

                    b.HasIndex("MunicipioID");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("TiendaOnline.Models.TipoUsuarios", b =>
                {
                    b.Property<int>("TipoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoUsuarioId");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("TiendaOnline.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoUsuarioID")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("TipoUsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TiendaOnline.Models.Ventas", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PagoID")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("VentaId");

                    b.HasIndex("ArticuloID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("EmpleadoID");

                    b.HasIndex("PagoID");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("TiendaOnline.Models.Articulos", b =>
                {
                    b.HasOne("TiendaOnline.Models.Categorias", "Categoria")
                        .WithMany("Articulos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("TiendaOnline.Models.Carritos", b =>
                {
                    b.HasOne("TiendaOnline.Models.Articulos", "Articulo")
                        .WithMany("Carritos")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Clientes", "Cliente")
                        .WithMany("Carritos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TiendaOnline.Models.Clientes", b =>
                {
                    b.HasOne("TiendaOnline.Models.Departamentos", "Departamento")
                        .WithMany("Clientes")
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Municipios", "Municipio")
                        .WithMany("Clientes")
                        .HasForeignKey("MunicipioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Usuarios", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Municipio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TiendaOnline.Models.Compras", b =>
                {
                    b.HasOne("TiendaOnline.Models.Articulos", "Articulo")
                        .WithMany("Compras")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Empleados", "Empleado")
                        .WithMany("Compras")
                        .HasForeignKey("EmpleadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Proveedores", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Empleado");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("TiendaOnline.Models.Empleados", b =>
                {
                    b.HasOne("TiendaOnline.Models.Departamentos", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Municipios", "Municipio")
                        .WithMany("Empleados")
                        .HasForeignKey("MunicipioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Usuarios", "Usuario")
                        .WithMany("Empleados")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Municipio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TiendaOnline.Models.Proveedores", b =>
                {
                    b.HasOne("TiendaOnline.Models.Departamentos", "Departamento")
                        .WithMany("Proveedores")
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Municipios", "Municipio")
                        .WithMany("Proveedores")
                        .HasForeignKey("MunicipioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("TiendaOnline.Models.Usuarios", b =>
                {
                    b.HasOne("TiendaOnline.Models.TipoUsuarios", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("TiendaOnline.Models.Ventas", b =>
                {
                    b.HasOne("TiendaOnline.Models.Articulos", "Articulo")
                        .WithMany("Ventas")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Clientes", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Empleados", "Empleado")
                        .WithMany("Ventas")
                        .HasForeignKey("EmpleadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Pagos", "Pago")
                        .WithMany("Ventas")
                        .HasForeignKey("PagoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("TiendaOnline.Models.Articulos", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Compras");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("TiendaOnline.Models.Categorias", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("TiendaOnline.Models.Clientes", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("TiendaOnline.Models.Departamentos", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("TiendaOnline.Models.Empleados", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("TiendaOnline.Models.Municipios", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("TiendaOnline.Models.Pagos", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("TiendaOnline.Models.Proveedores", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("TiendaOnline.Models.TipoUsuarios", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TiendaOnline.Models.Usuarios", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
